import{_ as e,a as s,a2 as t,o as n}from"./chunks/framework.DAlL-BGO.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"lastUpdated":"2023-12-18 22:22"},"headers":[],"relativePath":"pages/Docker/Docker基本命令.md","filePath":"pages/Docker/Docker基本命令.md","lastUpdated":1733806965000}'),i={name:"pages/Docker/Docker基本命令.md"};function p(l,a,o,c,d,h){return n(),s("div",null,a[0]||(a[0]=[t(`<h2 id="一、镜像操作" tabindex="-1">一、镜像操作 <a class="header-anchor" href="#一、镜像操作" aria-label="Permalink to &quot;一、镜像操作&quot;">​</a></h2><h3 id="_1、列出镜像" tabindex="-1">1、列出镜像 <a class="header-anchor" href="#_1、列出镜像" aria-label="Permalink to &quot;1、列出镜像&quot;">​</a></h3><p>查看本地拥有的镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker images</span></span></code></pre></div><p>或者</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker image ls</span></span></code></pre></div><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span></span>
<span class="line"><span>centos              latest              9f38484d220f        2 days ago          202MB</span></span>
<span class="line"><span>redis               latest              0f88f9be5839        11 days ago         95MB</span></span>
<span class="line"><span>hello-world         latest              fce289e99eb9        2 months ago        1.84kB</span></span></code></pre></div><h3 id="_2、搜索镜像" tabindex="-1">2、搜索镜像 <a class="header-anchor" href="#_2、搜索镜像" aria-label="Permalink to &quot;2、搜索镜像&quot;">​</a></h3><p>例如查询nginx镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker search nginx</span></span></code></pre></div><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NAME                                                   DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span></span>
<span class="line"><span>nginx                                                  Official build of Nginx.                        11081               [OK]                </span></span>
<span class="line"><span>jwilder/nginx-proxy                                    Automated Nginx reverse proxy for docker con…   1562                                    [OK]</span></span>
<span class="line"><span>richarvey/nginx-php-fpm                                Container running Nginx + PHP-FPM capable of…   690                                     [OK]</span></span></code></pre></div><h3 id="_3、下载镜像" tabindex="-1">3、下载镜像 <a class="header-anchor" href="#_3、下载镜像" aria-label="Permalink to &quot;3、下载镜像&quot;">​</a></h3><p>拉取nginx, 一般称作拉取<code>pull</code>镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker pull nginx</span></span></code></pre></div><h3 id="_4、导入-导出镜像" tabindex="-1">4、导入/导出镜像 <a class="header-anchor" href="#_4、导入-导出镜像" aria-label="Permalink to &quot;4、导入/导出镜像&quot;">​</a></h3><p>导出nginx镜像，tar文件如果不带路径的话，导出的文件在当前目录中</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker save nginx &gt; nginx.tar</span></span></code></pre></div><p>导入nginx镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker load &lt; nginx.tar</span></span></code></pre></div><h3 id="_5、删除镜像" tabindex="-1">5、删除镜像 <a class="header-anchor" href="#_5、删除镜像" aria-label="Permalink to &quot;5、删除镜像&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker rmi nginx</span></span></code></pre></div><h2 id="二、容器操作" tabindex="-1">二、容器操作 <a class="header-anchor" href="#二、容器操作" aria-label="Permalink to &quot;二、容器操作&quot;">​</a></h2><h3 id="_1、列出容器" tabindex="-1">1、列出容器 <a class="header-anchor" href="#_1、列出容器" aria-label="Permalink to &quot;1、列出容器&quot;">​</a></h3><p>列出运行中的容器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker ps</span></span></code></pre></div><p>列出全部的状态的容器，包括运行中和已停止</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker ps -a</span></span></code></pre></div><h3 id="_2、创建并启动容器" tabindex="-1">2、创建并启动容器 <a class="header-anchor" href="#_2、创建并启动容器" aria-label="Permalink to &quot;2、创建并启动容器&quot;">​</a></h3><p>将镜像加载到容器，例如加载centos镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker run -i -t centos /bin/bash</span></span></code></pre></div><blockquote><p>-i 表示容器启动后，打开标准的输入设备，可使用键盘输入 -t 表示启动容器后，分配一个伪终端 /bin/bash 表示运行的程序</p></blockquote><p>启动后可以按<code>ctrl+p+q</code>使容器后台运行</p><h3 id="_3、进入容器" tabindex="-1">3、进入容器 <a class="header-anchor" href="#_3、进入容器" aria-label="Permalink to &quot;3、进入容器&quot;">​</a></h3><p>进入运行中的容器，其中<code>a00aa07536cf</code>是容器的 id(CONTAINER ID)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker attach a00aa07536cf</span></span></code></pre></div><p>可以自定义一个名称</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker rename modest_goldberg my_centos</span></span></code></pre></div><p>之后直接使用名称运行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker attach my_centos</span></span></code></pre></div><h3 id="_4、执行命令" tabindex="-1">4、执行命令 <a class="header-anchor" href="#_4、执行命令" aria-label="Permalink to &quot;4、执行命令&quot;">​</a></h3><p>参数和run命令是相同的</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker exec -it 280edfce7598 /bin/bash</span></span></code></pre></div><blockquote><p>-i 表示容器启动后，打开标准的输入设备，可使用键盘输入 -t 表示启动容器后，分配一个伪终端 /bin/bash 表示运行的程序</p></blockquote><h3 id="_5、停止容器" tabindex="-1">5、停止容器 <a class="header-anchor" href="#_5、停止容器" aria-label="Permalink to &quot;5、停止容器&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker stop a00aa07536cf</span></span></code></pre></div><h3 id="_6、终止容器" tabindex="-1">6、终止容器 <a class="header-anchor" href="#_6、终止容器" aria-label="Permalink to &quot;6、终止容器&quot;">​</a></h3><p>强制退出</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker kill a00aa07536cf</span></span></code></pre></div><h3 id="_7、启动容器" tabindex="-1">7、启动容器 <a class="header-anchor" href="#_7、启动容器" aria-label="Permalink to &quot;7、启动容器&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker start a00aa07536cf</span></span></code></pre></div><h3 id="_8、重启容器" tabindex="-1">8、重启容器 <a class="header-anchor" href="#_8、重启容器" aria-label="Permalink to &quot;8、重启容器&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker restart a00aa07536cf</span></span></code></pre></div><h3 id="_9、删除容器" tabindex="-1">9、删除容器 <a class="header-anchor" href="#_9、删除容器" aria-label="Permalink to &quot;9、删除容器&quot;">​</a></h3><p>删除容器前需要停止容器，可以使用stop和kill命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker rm a00aa07536cf</span></span></code></pre></div><h3 id="_10、导入-导出容器" tabindex="-1">10、导入/导出容器 <a class="header-anchor" href="#_10、导入-导出容器" aria-label="Permalink to &quot;10、导入/导出容器&quot;">​</a></h3><p>导出容器生成容器包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker export 3ae8f1fc3bfe &gt; centos.tar</span></span></code></pre></div><p>导入容器包为镜像，之后创建并启动容器即可，导入方式和导入镜像是有区别的，<code>zqyu/centos:latest</code>是镜像名称和版本</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker import centos.tar zqyu/centos:latest</span></span></code></pre></div><p>本机操作，直接从容器生成镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker commit 3ae8f1fc3bfe zqyu/centos:latest</span></span></code></pre></div>`,64)]))}const b=e(i,[["render",p]]);export{g as __pageData,b as default};
