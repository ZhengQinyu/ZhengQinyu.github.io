import{_ as n,a as e,a2 as s,o as i}from"./chunks/framework.DAlL-BGO.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"lastUpdated":"2023-12-18 22:22"},"headers":[],"relativePath":"pages/安装手册/Docker中安装并配置Nginx.md","filePath":"pages/安装手册/Docker中安装并配置Nginx.md","lastUpdated":1733806965000}'),p={name:"pages/安装手册/Docker中安装并配置Nginx.md"};function t(c,a,o,l,d,r){return i(),e("div",null,a[0]||(a[0]=[s(`<h2 id="一、检查并下载nginx镜像" tabindex="-1">一、检查并下载nginx镜像 <a class="header-anchor" href="#一、检查并下载nginx镜像" aria-label="Permalink to &quot;一、检查并下载nginx镜像&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker search nginx</span></span></code></pre></div><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NAME                                                   DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span></span>
<span class="line"><span>nginx                                                  Official build of Nginx.                        11152               [OK]                </span></span>
<span class="line"><span>jwilder/nginx-proxy                                    Automated Nginx reverse proxy for docker con…   1574                                    [OK]</span></span>
<span class="line"><span>richarvey/nginx-php-fpm                                Container running Nginx + PHP-FPM capable of…   697                                     [OK]</span></span>
<span class="line"><span>jrcs/letsencrypt-nginx-proxy-companion                 LetsEncrypt container to use with nginx as p…   494                                     [OK]</span></span>
<span class="line"><span>webdevops/php-nginx                                    Nginx with PHP-FPM                              123                                     [OK]</span></span>
<span class="line"><span>zabbix/zabbix-web-nginx-mysql                          Zabbix frontend based on Nginx web-server wi…   92                                      [OK]</span></span>
<span class="line"><span>bitnami/nginx                                          Bitnami nginx Docker Image                      65                                      [OK]</span></span></code></pre></div><p>我们选择第一个的官方镜像<code>nginx</code></p><h2 id="二、下载" tabindex="-1">二、下载 <a class="header-anchor" href="#二、下载" aria-label="Permalink to &quot;二、下载&quot;">​</a></h2><p>下载镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker pull nginx</span></span></code></pre></div><h2 id="三、启动" tabindex="-1">三、启动 <a class="header-anchor" href="#三、启动" aria-label="Permalink to &quot;三、启动&quot;">​</a></h2><p>启动<code>nginx</code>镜像，因为使用https，所以添加了映射目录，开放<code>443</code>端口</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker run -it -p 80:80 -p 443:443 -v /etc/letsencrypt:/etc/letsencrypt -v /usr/www:/usr/www --name nginx80 --restart=always  nginx bash</span></span></code></pre></div><h2 id="四、-容器内配置" tabindex="-1">四、 容器内配置 <a class="header-anchor" href="#四、-容器内配置" aria-label="Permalink to &quot;四、 容器内配置&quot;">​</a></h2><p>启动后直接进入容器，nginx容器内默认没有vim编辑器，先安装vim</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ apt-get update</span></span>
<span class="line"><span>$ apt-get install vim</span></span></code></pre></div><p>修改并添加自己的配置，当然也可以在启动时将外部的配置目录映射到容器内部。修改完成后启动nginx</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ nginx -c /etc/nginx/nginx.conf</span></span></code></pre></div><p>启动后<code>ctrl+p+q</code>使容器后台运行</p><h2 id="五、添加容器配置" tabindex="-1">五、添加容器配置 <a class="header-anchor" href="#五、添加容器配置" aria-label="Permalink to &quot;五、添加容器配置&quot;">​</a></h2><p>运行过程中如果需要修改容器配置，例如添加目录，添加端口映射，可以将容器导出成新镜像，之后启动新镜像即可。</p><p>导出新镜像,<code>ef0f509d9731</code>是容器id</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker commit ef0f509d9731 zqyu/nginx</span></span></code></pre></div><p>关闭原来的镜像，按照新的配置使用<code>docker run</code>命令启动新镜像</p>`,22)]))}const u=n(p,[["render",t]]);export{h as __pageData,u as default};
