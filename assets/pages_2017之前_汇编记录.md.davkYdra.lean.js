import{_ as n,a,a2 as p,o as l}from"./chunks/framework.DAlL-BGO.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{"lastUpdated":"2016-12-18 22:22"},"headers":[],"relativePath":"pages/2017之前/汇编记录.md","filePath":"pages/2017之前/汇编记录.md","lastUpdated":1733806965000}'),e={name:"pages/2017之前/汇编记录.md"};function i(c,s,t,E,A,D){return l(),a("div",null,s[0]||(s[0]=[p(`<p>汇编基础习题</p><h4 id="题1" tabindex="-1">题1 <a class="header-anchor" href="#题1" aria-label="Permalink to &quot;题1&quot;">​</a></h4><p>编写一个程序，计算$\\frac{X*Y-Z}{X}$的值。其中X、Y、Z均为16位带符号数，要求表达式的计算结果存放在数据段的RESULT单元中。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DATA SEGMENT</span></span>
<span class="line"><span> X DW 2H</span></span>
<span class="line"><span> Y DW 44H</span></span>
<span class="line"><span> Z DW 8H</span></span>
<span class="line"><span> RESULT DW ?</span></span>
<span class="line"><span>DATA ENDS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CODE SEGMENT</span></span>
<span class="line"><span>  ASSUME CS:CODE,DS:DATA</span></span>
<span class="line"><span>START:</span></span>
<span class="line"><span>  MOV AX,DATA</span></span>
<span class="line"><span>  MOV DS,AX</span></span>
<span class="line"><span>  MOV AX,X</span></span>
<span class="line"><span>  MOV BX,Y</span></span>
<span class="line"><span>  IMUL BX           ;有符号乘</span></span>
<span class="line"><span>  SBB AX,Z          ;借位减</span></span>
<span class="line"><span>  IDIV X            ;有符号除</span></span>
<span class="line"><span>  MOV RESULT,AX</span></span>
<span class="line"><span>  JMP $</span></span>
<span class="line"><span>  CODE ENDS</span></span>
<span class="line"><span>END START</span></span></code></pre></div><h4 id="题2" tabindex="-1">题2 <a class="header-anchor" href="#题2" aria-label="Permalink to &quot;题2&quot;">​</a></h4><p>设某班学生（10名）某门课程的成绩存放在内存中，试编程统计90分以上、80-89分、70-79分、60-69分、低于60分的学生人数，并分别存放到A、B、C、D、E单元中。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DATA  SEGMENT</span></span>
<span class="line"><span>  TAB DB 60,70,80,90,77,88,76,69,74,58          ;10个学生成绩</span></span>
<span class="line"><span>  A DB 0H</span></span>
<span class="line"><span>  B DB 0H</span></span>
<span class="line"><span>  C DB 0H</span></span>
<span class="line"><span>  D DB 0H</span></span>
<span class="line"><span>  E DB 0H</span></span>
<span class="line"><span>DATA ENDS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CODE SEGMENT</span></span>
<span class="line"><span>  ASSUME CS:CODE,DS:DATA</span></span>
<span class="line"><span>START:</span></span>
<span class="line"><span>  MOV AX,DATA</span></span>
<span class="line"><span>  MOV DS,AX</span></span>
<span class="line"><span>  MOV BX,OFFSET TAB   ;初始化指针</span></span>
<span class="line"><span>  MOV CX,10           ;设置计数器初值</span></span>
<span class="line"><span>  SELECT:</span></span>
<span class="line"><span>   MOV AL,[BX]</span></span>
<span class="line"><span>   CMP AL,90                ;大于等于90</span></span>
<span class="line"><span>   JGE G1</span></span>
<span class="line"><span>   CMP AL,80                ;大于等于80</span></span>
<span class="line"><span>   JGE G2</span></span>
<span class="line"><span>   CMP AL,70                ;大于等于70</span></span>
<span class="line"><span>   JGE G3</span></span>
<span class="line"><span>   CMP AL,60                ;大于等于60</span></span>
<span class="line"><span>   JGE G4</span></span>
<span class="line"><span>   JMP G5                   ;其他</span></span>
<span class="line"><span>G1:</span></span>
<span class="line"><span>   INC A</span></span>
<span class="line"><span>   JMP ENDLOOP</span></span>
<span class="line"><span>G2:</span></span>
<span class="line"><span>   INC B</span></span>
<span class="line"><span>   JMP ENDLOOP</span></span>
<span class="line"><span>G3:</span></span>
<span class="line"><span>   INC C</span></span>
<span class="line"><span>   JMP ENDLOOP</span></span>
<span class="line"><span>G4:</span></span>
<span class="line"><span>   INC D</span></span>
<span class="line"><span>   JMP ENDLOOP</span></span>
<span class="line"><span>G5:</span></span>
<span class="line"><span>   INC E</span></span>
<span class="line"><span>   JMP ENDLOOP</span></span>
<span class="line"><span>  ENDLOOP:</span></span>
<span class="line"><span>    INC BX           ;指针移动 + 1</span></span>
<span class="line"><span>  LOOP  SELECT</span></span>
<span class="line"><span>  JMP $</span></span>
<span class="line"><span> CODE ENDS</span></span>
<span class="line"><span>END START</span></span></code></pre></div><h4 id="题3" tabindex="-1">题3 <a class="header-anchor" href="#题3" aria-label="Permalink to &quot;题3&quot;">​</a></h4><p>用主程序、子程序结构实现判断textdata（10个单元）中的数据是否为“0”~“F”的ASCII码。若是，用十六进制数覆盖原单元，否则用0FFH覆盖原单元。</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DATA SEGMENT</span></span>
<span class="line"><span> TEXTDATA DB 03h,30h,35h,41h,46h,57h,78h,91h,01h,02h          ;10个参数</span></span>
<span class="line"><span> RUSTDATA DB 10 DUP(?)</span></span>
<span class="line"><span> DO DB ?</span></span>
<span class="line"><span> NUM DB ?</span></span>
<span class="line"><span>DATA ENDS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CODE SEGMENT</span></span>
<span class="line"><span>  ASSUME CS:CODE,DS:DATA</span></span>
<span class="line"><span>  START PROC</span></span>
<span class="line"><span>  MOV AX,DATA</span></span>
<span class="line"><span>  MOV DS,AX</span></span>
<span class="line"><span>  MOV BX,OFFSET TEXTDATA  ;初始化指针</span></span>
<span class="line"><span>  MOV SI,OFFSET RUSTDATA</span></span>
<span class="line"><span>  MOV CX,10           ;设置计数器初值</span></span>
<span class="line"><span>  SELECT:</span></span>
<span class="line"><span>   MOV AL,[BX]</span></span>
<span class="line"><span>   CALL CHECK</span></span>
<span class="line"><span>   MOV [BX],AL</span></span>
<span class="line"><span>   MOV [SI],AL</span></span>
<span class="line"><span>   INC BX           ;指针移动 + 1</span></span>
<span class="line"><span>   INC SI           ;指针移动 + 1      </span></span>
<span class="line"><span>  LOOP  SELECT</span></span>
<span class="line"><span>  JMP $</span></span>
<span class="line"><span>  START ENDP</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  ;子程序</span></span>
<span class="line"><span>  CHECK PROC</span></span>
<span class="line"><span> CMP AL,&#39;0&#39;</span></span>
<span class="line"><span> JGE CEK      ;判断AL &gt;= &#39;0&#39;</span></span>
<span class="line"><span> JMP WRONG</span></span>
<span class="line"><span>CEK:</span></span>
<span class="line"><span>  CMP AL,&#39;F&#39;</span></span>
<span class="line"><span>  JLE RIGHT   ;判断AL &lt;= &#39;F&#39;</span></span>
<span class="line"><span>  JMP WRONG</span></span>
<span class="line"><span>RIGHT: </span></span>
<span class="line"><span>    RET</span></span>
<span class="line"><span>WRONG:</span></span>
<span class="line"><span>    MOV AL,0FFH</span></span>
<span class="line"><span>    RET</span></span>
<span class="line"><span>     </span></span>
<span class="line"><span>  CHECK ENDP</span></span>
<span class="line"><span>  CODE ENDS</span></span>
<span class="line"><span>END START</span></span></code></pre></div>`,10)]))}const O=n(e,[["render",i]]);export{o as __pageData,O as default};
