import{_ as s,a as n,a2 as e,o as p}from"./chunks/framework.DAlL-BGO.js";const t="/assets/image-5.B3IHAygk.png",u=JSON.parse('{"title":"4. 插件中心修改","description":"","frontmatter":{"lastUpdated":"2023-12-18 22:22"},"headers":[],"relativePath":"pages/安装手册/docker-compose安装和配置jenkins.md","filePath":"pages/安装手册/docker-compose安装和配置jenkins.md","lastUpdated":1733806965000}'),i={name:"pages/安装手册/docker-compose安装和配置jenkins.md"};function o(l,a,c,d,r,h){return p(),n("div",null,a[0]||(a[0]=[e('<p><img src="'+t+`" alt="alt text"></p><h2 id="_1-准备" tabindex="-1">1. 准备 <a class="header-anchor" href="#_1-准备" aria-label="Permalink to &quot;1. 准备&quot;">​</a></h2><p>创建文件夹 <code>/opt/docker-home/jenkins/jenkins_home</code>，配置文件夹权限</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ cd \`/opt/docker-home/jenkins</span></span>
<span class="line"><span>$ sudo chown -R 1000 jenkins_home</span></span></code></pre></div><h2 id="_2-docker-compose-yml" tabindex="-1">2. docker-compose.yml <a class="header-anchor" href="#_2-docker-compose-yml" aria-label="Permalink to &quot;2. docker-compose.yml&quot;">​</a></h2><p>在 <code>/opt/docker-home/jenkins</code> 文件下创建文件 <code>docker-compose.yml</code>，文件内容配置如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>version: &quot;3&quot;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  app:</span></span>
<span class="line"><span>    image: jenkins/jenkins:2.282-alpine</span></span>
<span class="line"><span>    container_name: jenkins</span></span>
<span class="line"><span>    restart: always</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      TZ: Asia/Shanghai</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./jenkins_home:/var/jenkins_home</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - &quot;8080:8080&quot;</span></span>
<span class="line"><span>      - &quot;50000:50000&quot;</span></span></code></pre></div><h2 id="_3-启动" tabindex="-1">3. 启动 <a class="header-anchor" href="#_3-启动" aria-label="Permalink to &quot;3. 启动&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker-compose up -d</span></span></code></pre></div><p>启动完成后查看文件 <code>/opt/docker-home/jenkins/jenkins_home/secrets/initialAdminPassword</code>，这是初始化后的密码，jenkins初始化需要用到。</p><h1 id="_4-插件中心修改" tabindex="-1">4. 插件中心修改 <a class="header-anchor" href="#_4-插件中心修改" aria-label="Permalink to &quot;4. 插件中心修改&quot;">​</a></h1><p>初始化后，可以修改插件中心为国内的镜像源，下载速度更快。依次进入配置<code>系统配置 -&gt; 插件管理 -&gt; 高级 -&gt; 升级站点</code>，修改为 <code>https://mirrors.cloud.tencent.com/jenkins/updates/update-center.json</code>，提交保存即可。</p><p>更多的插件 <a href="https://jenkins-zh.cn/tutorial/management/plugin/update-center/" target="_blank" rel="noreferrer">镜像地址</a></p><h2 id="_5-容器内安装ansible" tabindex="-1">5. 容器内安装ansible <a class="header-anchor" href="#_5-容器内安装ansible" aria-label="Permalink to &quot;5. 容器内安装ansible&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ docker exec -it --user root jenkins bash</span></span></code></pre></div><p>进入容器后，修改镜像源,将 <code>/etc/apk/repositories</code> 的内容修改为如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># http://dl-cdn.alpinelinux.org/alpine/v3.12/main</span></span>
<span class="line"><span># http://dl-cdn.alpinelinux.org/alpine/v3.12/community</span></span>
<span class="line"><span>https://mirrors.cloud.tencent.com/alpine/v3.12/main</span></span>
<span class="line"><span>https://mirrors.cloud.tencent.com/alpine/v3.12/community</span></span></code></pre></div><p>安装</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ apk update</span></span>
<span class="line"><span>$ apk add ansible</span></span></code></pre></div>`,19)]))}const k=s(i,[["render",o]]);export{u as __pageData,k as default};
