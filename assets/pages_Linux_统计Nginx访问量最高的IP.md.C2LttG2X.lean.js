import{_ as e,a as t,a2 as s,o}from"./chunks/framework.DAlL-BGO.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"lastUpdated":"2023-12-18 22:22"},"headers":[],"relativePath":"pages/Linux/统计Nginx访问量最高的IP.md","filePath":"pages/Linux/统计Nginx访问量最高的IP.md","lastUpdated":1733806965000}'),n={name:"pages/Linux/统计Nginx访问量最高的IP.md"};function p(i,a,c,l,d,u){return o(),t("div",null,a[0]||(a[0]=[s(`<h2 id="日志格式" tabindex="-1">日志格式 <a class="header-anchor" href="#日志格式" aria-label="Permalink to &quot;日志格式&quot;">​</a></h2><p>文件名称是 <code>nginx_access.log</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>106.38.241.73 - - [29/Oct/2019:03:51:15 +0800] &quot;GET /web/notice/20160524/568.html HTTP/1.1&quot; 200 23333 &quot;-&quot; &quot;Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)&quot;</span></span>
<span class="line"><span>106.38.241.73 - - [29/Oct/2019:03:51:44 +0800] &quot;GET /web/notice/20180704/1465.html HTTP/1.1&quot; 200 25232 &quot;-&quot; &quot;Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)&quot;</span></span>
<span class="line"><span>183.136.190.62 - - [29/Oct/2019:03:52:06 +0800] &quot;GET / HTTP/1.1&quot; 200 4535 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36&quot;</span></span>
<span class="line"><span>106.38.241.73 - - [29/Oct/2019:03:52:10 +0800] &quot;GET /web/notice/20160926/809.html HTTP/1.1&quot; 200 31855 &quot;-&quot; &quot;Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)&quot;</span></span></code></pre></div><h2 id="执行命令" tabindex="-1">执行命令 <a class="header-anchor" href="#执行命令" aria-label="Permalink to &quot;执行命令&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ awk &#39;{print $1}&#39; nginx_access.log | sort | uniq -c | sort -nr -k1 | head -n 100</span></span></code></pre></div><p>命令解释：</p><blockquote><p>awk &#39;{print $1}&#39; nginx_access.log</p></blockquote><p>获取 <code>nginx_access.log</code>第一列，就是 <code>IP</code></p><blockquote><p>sort</p></blockquote><p>第一个<code>sort</code>,IP 按照字母序正序排列，这是一个归类过程，便于下面命令的执行</p><blockquote><p>uniq -c</p></blockquote><p>按照相同项归类，遇到不同的项就生成新类别，所以需要前面的<code>sort</code>。最终生成的格式如下是 <code>数量 IP</code>的格式，如： <code>3 106.38.241.73</code></p><blockquote><p>sort -k1 -nr</p></blockquote><p>根据第一列排序(k1)，按照数字序(-n)逆序(-r)排。</p><blockquote><p>head -n 100</p></blockquote><p>从头开始输出结果，输出前面的100行，类似的命令还有<code>tail</code></p><h2 id="其它命令" tabindex="-1">其它命令 <a class="header-anchor" href="#其它命令" aria-label="Permalink to &quot;其它命令&quot;">​</a></h2><ul><li>统计IP数量</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> $ awk &#39;{print $1}&#39; access_api.log | sort | uniq -c | awk &#39;{print NR}&#39; | tail -n1</span></span></code></pre></div><p>或</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ awk &#39;{print $1}&#39; access_api.log | sort | uniq -c | awk &#39;END{print NR}&#39;</span></span></code></pre></div><ul><li>统计访问总量</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ awk &#39;{print $1}&#39; access_www.log-20201201 | sort | uniq -c | sort -nr -k1 | awk &#39;{a+=$1}END{print a}&#39;</span></span></code></pre></div>`,23)]))}const g=e(n,[["render",p]]);export{h as __pageData,g as default};
